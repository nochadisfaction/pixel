---
// BackupSecurityManager.astro
// Main component for the backup security admin interface

import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import BackupConfigurationTab from './backup/BackupConfigurationTab'
import BackupStatusTab from './backup/BackupStatusTab'
import BackupRecoveryTab from './backup/BackupRecoveryTab'
import BackupReportTab from './backup/BackupReportTab'
---

<div class="container mx-auto p-0">
  <div id="backup-alert" class="hidden mb-4"></div>

  <Tabs defaultValue="status" client:load>
    <TabsList className="mb-4">
      <TabsTrigger value="status">Backup Status</TabsTrigger>
      <TabsTrigger value="config">Configuration</TabsTrigger>
      <TabsTrigger value="recovery">Recovery Testing</TabsTrigger>
      <TabsTrigger value="reports">Reports</TabsTrigger>
    </TabsList>

    <TabsContent value="status" className="space-y-4">
      <BackupStatusTab
        backups={mockBackups}
        onCreateBackup={handleCreateBackup}
        onVerifyBackup={handleVerifyBackup}
        client:load
      />
    </TabsContent>

    <TabsContent value="config" className="space-y-4">
      <BackupConfigurationTab
        config={mockBackupConfig}
        onUpdateConfig={(config: any) => handleUpdateConfig(config)}
        client:load
      />
    </TabsContent>

    <TabsContent value="recovery" className="space-y-4">
      <BackupRecoveryTab
        backups={mockBackups as any}
        recoveryTests={mockRecoveryTests as any}
        onStartRecoveryTest={handleStartRecoveryTest}
        onScheduleRecoveryTests={handleScheduleRecoveryTests}
        client:load
      />
    </TabsContent>

    <TabsContent value="reports" className="space-y-4">
      <BackupReportTab
        backups={mockBackups}
        recoveryTests={mockRecoveryTests}
        client:load
      />
    </TabsContent>
  </Tabs>
</div>

<script>
  // Client-side initialization and event handlers
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize alert system for backup notifications
    const alertContainer = document.getElementById('backup-alert')

    if (alertContainer) {
      // Example of showing an alert
      // In production, this would be triggered by server events or status changes
      /*
      alertContainer.classList.remove('hidden');
      alertContainer.innerHTML = `
        <div class="bg-amber-50 border-l-4 border-amber-500 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-amber-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm text-amber-700">
                Automated backup verification is in progress. Results will be available shortly.
              </p>
            </div>
          </div>
        </div>
      `;
      */
    }
  })
</script>
